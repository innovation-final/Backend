name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # 환경 세팅
    - name: Set environment values
      run: |
        echo "AWS_REGION=ap-northeast-2" >> $GITHUB_ENV |
        echo "S3_BUCKET_NAME=innovation-final-cd" >> $GITHUB_ENV |
        echo "CODE_DEPLOY_APPLICATION_NAME=Stock-Stock" >> $GITHUB_ENV |
        echo "CODE_DEPLOY_DEPLOYMENT_GROUP_NAME=stock-stock" >> $GITHUB_ENV     
      
    # 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    # JDK 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
       
    # Gradlew 실행 허용
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
      
    ## application.properties 생성
    - name: make application.properties
      run:
        mkdir ./src/main/resources | 
        touch ./src/main/resources/application.properties 
      shell: bash

    - name: deliver application.properties
      run: echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.properties
      shell: bash

    # Gradle build (Test 제외)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: clean build -x test

    # AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

    # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
